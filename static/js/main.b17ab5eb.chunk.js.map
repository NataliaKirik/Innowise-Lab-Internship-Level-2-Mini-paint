{"version":3,"sources":["pages/gallery/gallery.module.css","common/constants/routes.ts","firebase/firebase.ts","features/appSlice.ts","features/loginSlice.ts","features/toolSlice.ts","firebase/db.ts","features/gallerySlice.ts","app/store.ts","pages/login/Login.tsx","pages/gallery/Gallery.tsx","common/components/toolbar/Toolbar.tsx","common/components/canvas/Canvas.tsx","pages/paint/Paint.tsx","common/components/logInOutButton/logInOutButton.tsx","common/components/header/Header.tsx","pages/register/Register.tsx","common/components/errorSnackBar/ErrorSnackbar.tsx","assets/img/loader.gif","common/components/preloader/Preloader.tsx","app/App.tsx","reportWebVitals.ts","index.tsx","common/components/form/form.module.css","common/components/toolbar/toolbar.module.css","common/components/header/header.module.css","common/components/canvas/canvas.module.css","common/components/preloader/preloader.module.css"],"names":["module","exports","PATH","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","slice","createSlice","name","initialState","error","status","reducers","setError","state","action","payload","startLoading","stopLoading","appSlice","reducer","actions","createUser","createAsyncThunk","thunkAPI","a","email","password","dispatch","createUserWithEmailAndPassword","userData","userEmail","user","userUid","uid","isAuth","message","rejectWithValue","authUser","signInWithEmailAndPassword","logOutUser","_","signOut","then","catch","onFulfilled","onRejected","setNotAuth","extraReducers","builder","addCase","fulfilled","rejected","loginSlice","activeTool","outlineColor","fillColor","lineWidth","chooseTool","chooseOutlineColor","color","chooseFillColor","chooseLineWidth","toolSlice","db","getFirestore","saveArt","userId","canvasDataUrl","artRef","collection","addDoc","getUsers","getDocs","query","docs","map","data","users","u","getImages","q","where","images","img","id","image","usersEmail","selectedUser","setSelectedUser","gallerySlice","rootReducer","combineReducers","app","login","toolBar","gallery","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","useAppDispatch","useDispatch","window","Login","isLoggedIn","useSelector","useForm","defaultValues","mode","register","handleSubmit","errors","formState","to","className","s","formContainer","onSubmit","form","text","TextField","required","value","pattern","label","variant","input","autoComplete","render","minLength","maxLength","type","button","Button","blockRegistration","regText","regLink","Gallery","usersEmails","usersEmailsLabel","filter","item","pos","indexOf","e","useEffect","Autocomplete","disablePortal","options","renderInput","params","onInputChange","inputSelect","src","alt","Toolbar","toolbar","toolbar_btn","activeBtn","onClick","colorContainer","color_input","onChange","target","toolbar_lineWidth","min","max","lineWidth_input","Canvas","canvasRef","useRef","useState","ctx","setCtx","startX","setStartX","startY","setStartY","tool","width","isPainting","setIsPainting","canvasData","setCanvasData","undoList","setUndoList","redoList","current","getContext","mainWrapper","ref","onMouseDown","beginPath","moveTo","pageX","offsetLeft","pageY","offsetTop","getImageData","height","clearRect","toDataURL","onMouseMove","strokeStyle","fillStyle","lineTo","stroke","currentX","currentY","putImageData","fillRect","strokeRect","r","Math","sqrt","arc","PI","fill","onMouseUp","buttonsContainer","IconButton","length","dataUrl","pop","push","Image","onload","drawImage","fontSize","Paint","LogInOutButton","Header","header","menuWrapper","menu","activeClassName","active","logOutBtn","Register","watch","password_repeat","validate","SimpleSnackbar","React","open","setOpen","setMessage","errorMessage","handleClose","event","reason","size","Snackbar","onClose","autoHideDuration","Preloader","loaderContainer","loader","LoaderGif","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b17ab5eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"gallery_img__cT3zE\",\"inputSelect\":\"gallery_inputSelect__3gl11\"};","export const PATH = {\n    LOGIN: '/login',\n    REGISTER: '/register',\n    GALLERY: '/gallery',\n    PAINT: '/paint',\n};\n","import firebase from 'firebase/compat';\nimport { getAuth } from 'firebase/auth';\n\nfirebase.initializeApp({\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n});\n\nexport const auth = getAuth();\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState: InitialStateType = {\n    error: null,\n    status: 'idle',\n};\n\nconst slice = createSlice({\n    name: 'appSlice',\n    initialState: initialState,\n    reducers: {\n        setError(state: InitialStateType, action) {\n            state.error = action.payload;\n        },\n        startLoading(state: InitialStateType, action) {\n            state.status = action.payload;\n        },\n        stopLoading(state: InitialStateType, action) {\n            state.status = action.payload;\n        },\n    },\n});\n\nexport const appSlice = slice.reducer;\nexport const { setError, startLoading, stopLoading } = slice.actions;\n\n//types\ntype InitialStateType = {\n    error: null | string;\n    status: statusType;\n};\nexport type statusType = 'idle' | 'loading';\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { auth } from '../firebase/firebase';\nimport { setError, startLoading, stopLoading } from './appSlice';\n\nexport const createUser = createAsyncThunk('login/createUser', async ({ email, password }: AuthType, thunkAPI) => {\n    try {\n        thunkAPI.dispatch(startLoading('loading'));\n        const userData = await createUserWithEmailAndPassword(auth, email, password);\n        const userEmail = userData.user.email;\n        const userUid = userData.user.uid;\n        thunkAPI.dispatch(stopLoading('idle'));\n        return {\n            userEmail,\n            userUid,\n            isAuth: true,\n        };\n    } catch (error: any) {\n        thunkAPI.dispatch(stopLoading('idle'));\n        thunkAPI.dispatch(setError(error.message));\n        return thunkAPI.rejectWithValue({\n            userEmail: null,\n            isAuth: false,\n        });\n    }\n});\n\nexport const authUser = createAsyncThunk('login/authUser', async ({ email, password }: AuthType, thunkAPI) => {\n    try {\n        thunkAPI.dispatch(startLoading('loading'));\n        const userData = await signInWithEmailAndPassword(auth, email, password);\n        const userEmail = userData.user.email;\n        const userUid = userData.user.uid;\n        thunkAPI.dispatch(stopLoading('idle'));\n        return {\n            userEmail,\n            userUid,\n            isAuth: true,\n        };\n    } catch (error: any) {\n        thunkAPI.dispatch(stopLoading('idle'));\n        thunkAPI.dispatch(setError(error.message));\n        return thunkAPI.rejectWithValue({\n            userEmail: null,\n            isAuth: false,\n        });\n    }\n});\n\nexport const logOutUser = createAsyncThunk('login/logOutUser ', async (_, thunkAPI) => {\n    thunkAPI.dispatch(startLoading('loading'));\n    signOut(auth)\n        .then(() => {\n            thunkAPI.dispatch(stopLoading('idle'));\n        })\n        .catch((error: any) => {\n            thunkAPI.dispatch(stopLoading('idle'));\n            thunkAPI.dispatch(setError(error.message));\n        });\n});\n\nconst initialState: InitialStateType = {\n    userEmail: null,\n    uid: null,\n    isAuth: false,\n};\n\nconst onFulfilled = (state: InitialStateType, action: any) => {\n    state.userEmail = action.payload.userEmail;\n    state.uid = action.payload.userUid;\n    state.isAuth = action.payload.isAuth;\n};\nconst onRejected = (state: InitialStateType, action: any) => {\n    state.isAuth = action.payload.isAuth;\n    state.userEmail = action.payload.userEmail;\n};\n\nconst slice = createSlice({\n    name: 'loginSlice',\n    initialState: initialState,\n    reducers: {\n        setNotAuth(state: InitialStateType, action) {\n            state.userEmail = action.payload.userEmail;\n            state.isAuth = action.payload.isAuth;\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(createUser.fulfilled, onFulfilled);\n        builder.addCase(createUser.rejected, onRejected);\n        builder.addCase(authUser.fulfilled, onFulfilled);\n        builder.addCase(authUser.rejected, onRejected);\n        builder.addCase(logOutUser.fulfilled, (state: InitialStateType, action) => {\n            state.isAuth = false;\n        });\n        builder.addCase(logOutUser.rejected, (state: InitialStateType, action: any) => {\n            state.isAuth = true;\n        });\n    },\n});\n\nexport const loginSlice = slice.reducer;\nexport const { setNotAuth } = slice.actions;\n\n//types\ntype InitialStateType = {\n    userEmail: string | null;\n    uid: string | null;\n    isAuth: boolean;\n};\ntype AuthType = {\n    email: string;\n    password: string;\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState: InitialStateType = {\n    activeTool: 'brush',\n    outlineColor: '#000000',\n    fillColor: '#FFFFFF',\n    lineWidth: 1,\n};\n\nconst slice = createSlice({\n    name: 'toolSlice',\n    initialState: initialState,\n    reducers: {\n        chooseTool(state: InitialStateType, action) {\n            state.activeTool = action.payload.activeTool;\n        },\n        chooseOutlineColor(state: InitialStateType, action) {\n            state.outlineColor = action.payload.color;\n        },\n        chooseFillColor(state: InitialStateType, action) {\n            state.fillColor = action.payload.color;\n        },\n        chooseLineWidth(state: InitialStateType, action) {\n            state.lineWidth = action.payload.lineWidth;\n        },\n    },\n});\n\nexport const toolSlice = slice.reducer;\nexport const { chooseTool, chooseOutlineColor, chooseFillColor, chooseLineWidth } = slice.actions;\n\n//types\ntype InitialStateType = {\n    activeTool: string;\n    outlineColor: string;\n    fillColor: string;\n    lineWidth: number;\n};\n","import { addDoc, collection, getFirestore } from 'firebase/firestore';\n\nexport const db = getFirestore();\n\nexport const saveArt = async (userEmail: string | null, userId: string | null, canvasDataUrl: string) => {\n    const artRef = collection(db, 'artCollection');\n    await addDoc(artRef, {\n        userEmail,\n        userId,\n        canvasDataUrl,\n    });\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport { db } from '../firebase/db';\nimport { startLoading, stopLoading } from './appSlice';\n\nexport const getUsers = createAsyncThunk('gallerySlice/getUsers', async (_, thunkAPI) => {\n    thunkAPI.dispatch(startLoading('loading'));\n    return getDocs(query(collection(db, 'artCollection')))\n        .then(({ docs }) => {\n            return docs.map((user) => user.data());\n        })\n        .then((users) => {\n            thunkAPI.dispatch(stopLoading('idle'));\n            return users.map((u) => {\n                return u.userEmail;\n            });\n        });\n});\n\nexport const getImages = createAsyncThunk('gallery/getImages', async (userEmail: string, thunkAPI) => {\n    thunkAPI.dispatch(startLoading('loading'));\n    let q = query(collection(db, 'artCollection'));\n    if (userEmail) {\n        thunkAPI.dispatch(stopLoading('idle'));\n        q = query(collection(db, 'artCollection'), where('userEmail', '==', userEmail));\n    }\n    return getDocs(q)\n        .then((data) => {\n            return data.docs;\n        })\n        .then((images) => {\n            thunkAPI.dispatch(stopLoading('idle'));\n            return images.map((img) => {\n                return {\n                    id: img.id,\n                    image: img.data().canvasDataUrl,\n                };\n            });\n        });\n});\n\nconst initialState: InitialStateType = {\n    usersEmail: [],\n    selectedUser: '',\n    images: [],\n};\n\nconst slice = createSlice({\n    name: 'gallerySlice',\n    initialState: initialState,\n    reducers: {\n        setSelectedUser(state: InitialStateType, action) {\n            state.selectedUser = action.payload;\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(getUsers.fulfilled, (state: InitialStateType, action: any) => {\n            state.usersEmail = action.payload;\n        });\n        builder.addCase(getImages.fulfilled, (state: InitialStateType, action: any) => {\n            state.images = action.payload;\n        });\n    },\n});\n\nexport const gallerySlice = slice.reducer;\nexport const { setSelectedUser } = slice.actions;\n\n//types\ntype InitialStateType = {\n    usersEmail: [];\n    selectedUser: string;\n    images: ImgType[];\n};\nexport type ImgType = {\n    id: string;\n    image: string;\n};\n","import { combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { loginSlice } from '../features/loginSlice';\nimport { toolSlice } from '../features/toolSlice';\nimport { useDispatch } from 'react-redux';\nimport { gallerySlice } from '../features/gallerySlice';\nimport { appSlice } from '../features/appSlice';\n\nconst rootReducer = combineReducers({\n    app: appSlice,\n    login: loginSlice,\n    toolBar: toolSlice,\n    gallery: gallerySlice,\n});\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(thunkMiddleware),\n});\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\n// @ts-ignore\nwindow.store = store;\n\nexport default store;\n","import React from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { Button, TextField } from '@mui/material';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Inputs } from '../../common/components/form/types';\nimport s from '../../common/components/form/form.module.css';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { PATH } from '../../common/constants/routes';\nimport { useSelector } from 'react-redux';\nimport { authUser } from '../../features/loginSlice';\nimport { AppRootStateType, useAppDispatch } from '../../app/store';\n\nexport function Login() {\n    const dispatch = useAppDispatch();\n    const onSubmit: SubmitHandler<Inputs> = (data) => {\n        dispatch(\n            authUser({\n                email: data.email,\n                password: data.password,\n            }),\n        );\n    };\n    const isLoggedIn = useSelector<AppRootStateType, boolean>((state) => state.login.isAuth);\n\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<Inputs>({\n        defaultValues: {\n            email: '',\n            password: '',\n        },\n        mode: 'onChange',\n    });\n\n    if (isLoggedIn) return <Redirect to={PATH.PAINT} />;\n\n    return (\n        <div className={s.formContainer}>\n            <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\n                <div className={s.text}>Email</div>\n                <TextField\n                    {...register('email', {\n                        required: {\n                            value: true,\n                            message: 'Email is required',\n                        },\n                        pattern: {\n                            value: /^[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})$/,\n                            message: 'Invalid email',\n                        },\n                    })}\n                    color={'primary'}\n                    label={'email'}\n                    variant={'outlined'}\n                    className={s.input}\n                    autoComplete={'off'}\n                />\n                <ErrorMessage\n                    errors={errors}\n                    name=\"email\"\n                    render={({ message }) => <div className={s.error}>{message}</div>}\n                />\n\n                <div className={s.text}>Password</div>\n                <TextField\n                    {...register('password', {\n                        required: {\n                            value: true,\n                            message: 'Password is required',\n                        },\n                        minLength: {\n                            value: 6,\n                            message: 'Password should be at least 6 characters ',\n                        },\n                        maxLength: {\n                            value: 12,\n                            message: 'Password should be between 6 and 12 characters',\n                        },\n                    })}\n                    color={'primary'}\n                    label={'password'}\n                    variant={'outlined'}\n                    className={s.input}\n                    type=\"password\"\n                />\n                <ErrorMessage\n                    errors={errors}\n                    name=\"password\"\n                    render={({ message }) => <div className={s.error}>{message}</div>}\n                />\n                <div className={s.button}>\n                    <Button variant={'contained'} type={'submit'}>\n                        Log in\n                    </Button>\n                </div>\n\n                <div className={s.blockRegistration}>\n                    <div className={s.regText}>Don't have an account?</div>\n                    <div>\n                        <NavLink to={PATH.REGISTER} className={s.regLink}>\n                            Registration\n                        </NavLink>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { AppRootStateType, useAppDispatch } from '../../app/store';\nimport { getImages, getUsers, ImgType, setSelectedUser } from '../../features/gallerySlice';\nimport { Autocomplete, TextField } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport s from './gallery.module.css';\n\nexport const Gallery = () => {\n    const dispatch = useAppDispatch();\n    const usersEmails = useSelector<AppRootStateType, string[]>((state) => state.gallery.usersEmail);\n    const uniqueUsersEmails = usersEmails.filter(function (item, pos) {\n        return usersEmails.indexOf(item) == pos;\n    });\n    const usersEmailsLabel = uniqueUsersEmails.map((e) => {\n        return {\n            label: e,\n            id: e,\n        };\n    });\n    const images = useSelector<AppRootStateType, ImgType[]>((state) => state.gallery.images);\n    const selectedUser = useSelector<AppRootStateType, string>((state) => state.gallery.selectedUser);\n\n    useEffect(() => {\n        dispatch(getUsers());\n    }, []);\n\n    useEffect(() => {\n        dispatch(getImages(selectedUser));\n    }, [selectedUser]);\n\n    return (\n        <div>\n            <Autocomplete\n                disablePortal\n                id=\"combo-box-demo\"\n                options={usersEmailsLabel}\n                renderInput={(params) => <TextField {...params} label=\"Select user\" />}\n                onInputChange={(e, value) => dispatch(setSelectedUser(value))}\n                value={{\n                    label: selectedUser,\n                    id: selectedUser,\n                }}\n                // isOptionEqualToValue={(option, value) => option.label === value.label}\n                className={s.inputSelect}\n            />\n            <div>\n                {images.map((img) => (\n                    <img src={img.image} alt={img.id} className={s.img} key={img.id} />\n                ))}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport s from './toolbar.module.css';\nimport { AppRootStateType, useAppDispatch } from '../../../app/store';\nimport { chooseFillColor, chooseLineWidth, chooseOutlineColor, chooseTool } from '../../../features/toolSlice';\nimport { useSelector } from 'react-redux';\n\nconst Toolbar = () => {\n    const toolsLeftBlock: string[] = ['brush', 'rect', 'circle', 'line', 'eraser', 'clear'];\n    const dispatch = useAppDispatch();\n    const activeTool = useSelector<AppRootStateType, string>((state) => state.toolBar.activeTool);\n    const lineWidth = useSelector<AppRootStateType, number>((state) => state.toolBar.lineWidth);\n    const outlineColor = useSelector<AppRootStateType, string>((state) => state.toolBar.outlineColor);\n    const fillColor = useSelector<AppRootStateType, string>((state) => state.toolBar.fillColor);\n\n    return (\n        <div className={s.toolbar}>\n            {toolsLeftBlock.map((name) => {\n                return (\n                    <button\n                        key={name}\n                        className={`${s.toolbar_btn} ${s[name]}  ${activeTool === name ? s.activeBtn : ''}`}\n                        onClick={() => dispatch(chooseTool({ activeTool: name }))}\n                    ></button>\n                );\n            })}\n            <div className={s.colorContainer}>\n                <div className={s.text}>Line color</div>\n                <input\n                    className={s.color_input}\n                    type=\"color\"\n                    value={outlineColor}\n                    onChange={(e) => dispatch(chooseOutlineColor({ color: e.target.value }))}\n                />\n            </div>\n            <div className={s.colorContainer}>\n                <div className={s.text}>Fill color</div>\n                <input\n                    className={s.color_input}\n                    type=\"color\"\n                    value={fillColor}\n                    onChange={(e) => dispatch(chooseFillColor({ color: e.target.value }))}\n                />\n            </div>\n            <div className={s.toolbar_lineWidth}>\n                <div className={s.text}>Line width</div>\n                <input\n                    type=\"number\"\n                    value={lineWidth}\n                    min={1}\n                    max={50}\n                    className={s.lineWidth_input}\n                    onChange={(e) =>\n                        dispatch(\n                            chooseLineWidth({\n                                lineWidth: e.target.value,\n                            }),\n                        )\n                    }\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Toolbar;\n","import React, { useEffect, useRef, useState } from 'react';\nimport s from './canvas.module.css';\nimport { useSelector } from 'react-redux';\nimport { AppRootStateType, useAppDispatch } from '../../../app/store';\nimport IconButton from '@mui/material/IconButton';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport RedoIcon from '@mui/icons-material/Redo';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { startLoading, stopLoading } from '../../../features/appSlice';\nimport { saveArt } from '../../../firebase/db';\n\nconst Canvas = () => {\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n    const [ctx, setCtx] = useState<CanvasRenderingContext2D | null>(null);\n    const [startX, setStartX] = useState<number>(0);\n    const [startY, setStartY] = useState<number>();\n    const userEmail = useSelector<AppRootStateType, string | null>((state) => state.login.userEmail);\n    const userId = useSelector<AppRootStateType, string | null>((state) => state.login.uid);\n    const tool = useSelector<AppRootStateType, string>((state) => state.toolBar.activeTool);\n    const outlineColor = useSelector<AppRootStateType, string>((state) => state.toolBar.outlineColor);\n    const fillColor = useSelector<AppRootStateType, string>((state) => state.toolBar.fillColor);\n    const width = useSelector<AppRootStateType, number>((state) => state.toolBar.lineWidth);\n    const [isPainting, setIsPainting] = useState<boolean>(false);\n    const [canvasData, setCanvasData] = useState<ImageData | undefined>();\n    const dispatch = useAppDispatch();\n    const [undoList, setUndoList] = useState<string[]>([]);\n    const [redoList, setRedoList] = useState<string[]>([]);\n\n    useEffect(() => {\n        if (canvasRef.current) {\n            setCtx(canvasRef.current.getContext('2d'));\n        }\n    }, []);\n\n    const onMouseDownHandler = (e: React.MouseEvent) => {\n        const target = e.target as HTMLCanvasElement;\n        if (ctx) {\n            ctx.beginPath();\n            ctx.moveTo(e.pageX - target.offsetLeft, e.pageY - target.offsetTop);\n            setStartX(e.pageX - target.offsetLeft);\n            setStartY(e.pageY - target.offsetTop);\n            setIsPainting(true);\n            setCanvasData(ctx.getImageData(0, 0, canvasRef.current!.width, canvasRef.current!.height));\n            if (tool === 'clear') {\n                ctx.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\n            }\n        }\n        if (canvasRef.current) {\n            setUndoList([...undoList, canvasRef.current.toDataURL()]);\n        }\n    };\n\n    const onMouseMoveHandler = (e: React.MouseEvent) => {\n        const target = e.target as HTMLCanvasElement;\n        if (isPainting && ctx && startX && startY && canvasRef.current) {\n            ctx.strokeStyle = outlineColor;\n            ctx.fillStyle = fillColor;\n            ctx.lineWidth = width;\n            switch (tool) {\n                case 'brush':\n                    ctx.lineTo(e.pageX - target.offsetLeft, e.pageY - target.offsetTop);\n                    ctx.stroke();\n                    break;\n                case 'rect':\n                    let currentX = e.pageX - target.offsetLeft;\n                    let currentY = e.pageY - target.offsetTop;\n                    let width = currentX - startX;\n                    let height = currentY - startY;\n                    ctx.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\n                    if (canvasData) {\n                        ctx.putImageData(canvasData, 0, 0);\n                    }\n                    ctx.beginPath();\n                    ctx.fillRect(startX, startY, width, height);\n                    ctx.strokeRect(startX, startY, width, height);\n\n                    break;\n                case 'circle': {\n                    let currentX = e.pageX - target.offsetLeft;\n                    let currentY = e.pageY - target.offsetTop;\n                    let width = currentX - startX;\n                    let height = currentY - startY;\n                    let r = Math.sqrt(width ** 2 + height ** 2);\n                    ctx.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\n                    if (canvasData) {\n                        ctx.putImageData(canvasData, 0, 0);\n                    }\n                    ctx.beginPath();\n                    ctx.arc(startX, startY, r, 0, 2 * Math.PI, false);\n                    ctx.fill();\n                    ctx.stroke();\n                    break;\n                }\n                case 'eraser':\n                    ctx.strokeStyle = 'white';\n                    ctx.lineTo(e.pageX - target.offsetLeft, e.pageY - target.offsetTop);\n                    ctx.stroke();\n                    break;\n                case 'line': {\n                    let currentX = e.pageX - target.offsetLeft;\n                    let currentY = e.pageY - target.offsetTop;\n                    ctx.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\n                    if (canvasData) {\n                        ctx.putImageData(canvasData, 0, 0);\n                    }\n                    ctx.beginPath();\n                    ctx.moveTo(startX, startY);\n                    ctx.lineTo(currentX, currentY);\n                    ctx.stroke();\n                    break;\n                }\n                default:\n                    break;\n            }\n        }\n    };\n\n    const onMouseUpHandler = () => {\n        setIsPainting(false);\n    };\n\n    const undo = () => {\n        if (undoList.length > 0) {\n            let dataUrl = undoList.pop();\n            redoList.push(canvasRef.current!.toDataURL());\n            let img = new Image();\n            if (typeof dataUrl === 'string') {\n                img.src = dataUrl;\n            }\n            img.onload = () => {\n                ctx!.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\n                ctx!.drawImage(img, 0, 0, canvasRef.current!.width, canvasRef.current!.height);\n            };\n        } else {\n            ctx!.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\n        }\n    };\n    const redo = () => {\n        if (redoList.length > 0) {\n            let dataUrl = redoList.pop();\n            undoList.push(canvasRef.current!.toDataURL());\n            let img = new Image();\n            if (typeof dataUrl === 'string') {\n                img.src = dataUrl;\n            }\n            img.onload = () => {\n                ctx!.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\n                ctx!.drawImage(img, 0, 0, canvasRef.current!.width, canvasRef.current!.height);\n            };\n        }\n    };\n    const save = () => {\n        dispatch(startLoading('loading'));\n        saveArt(userEmail, userId, canvasRef.current!.toDataURL()).then(() => {\n            dispatch(stopLoading('idle'));\n        });\n    };\n\n    return (\n        <div className={s.mainWrapper}>\n            <canvas\n                ref={canvasRef}\n                onMouseDown={onMouseDownHandler}\n                onMouseMove={onMouseMoveHandler}\n                onMouseUp={onMouseUpHandler}\n                width=\"950px\"\n                height=\"570px\"\n            />\n            <div className={s.buttonsContainer}>\n                <IconButton color=\"primary\" className={s.button} onClick={undo}>\n                    <UndoIcon fontSize={'large'} />\n                </IconButton>\n                <IconButton color=\"primary\" className={s.button} onClick={redo}>\n                    <RedoIcon fontSize={'large'} />\n                </IconButton>\n                <IconButton color=\"primary\" className={s.button} onClick={save}>\n                    <SaveIcon fontSize={'large'} />\n                </IconButton>\n            </div>\n        </div>\n    );\n};\n\nexport default Canvas;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppRootStateType } from '../../app/store';\nimport { Redirect } from 'react-router-dom';\nimport { PATH } from '../../common/constants/routes';\nimport Toolbar from '../../common/components/toolbar/Toolbar';\nimport Canvas from '../../common/components/canvas/Canvas';\n\nexport const Paint = () => {\n    const dispatch = useDispatch();\n    const isAuth = useSelector<AppRootStateType, boolean>((state) => state.login.isAuth);\n\n    useEffect(() => {\n        if (isAuth) return;\n    }, [isAuth, dispatch]);\n\n    if (!isAuth) return <Redirect to={PATH.LOGIN} />;\n\n    return (\n        <>\n            <Toolbar />\n            <Canvas />\n        </>\n    );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppRootStateType, useAppDispatch } from '../../../app/store';\nimport { Button } from '@mui/material';\nimport { logOutUser } from '../../../features/loginSlice';\n\nconst LogInOutButton = () => {\n    const isLoggedIn = useSelector<AppRootStateType, boolean>((state) => state.login.isAuth);\n    const dispatch = useAppDispatch();\n    const onLogOutClick = () => {\n        dispatch(logOutUser());\n    };\n\n    return (\n        <>\n            {isLoggedIn ? (\n                <Button variant={'contained'} type={'submit'} onClick={onLogOutClick}>\n                    Log out\n                </Button>\n            ) : null}\n        </>\n    );\n};\n\nexport default LogInOutButton;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PATH } from '../../constants/routes';\nimport s from './header.module.css';\nimport LogInOutButton from '../logInOutButton/logInOutButton';\n\nfunction Header() {\n    return (\n        <div className={s.header}>\n            <div className={s.menuWrapper}>\n                <ul className={s.menu}>\n                    <li>\n                        <NavLink to={PATH.LOGIN} activeClassName={s.active}>\n                            Login\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={PATH.REGISTER} activeClassName={s.active}>\n                            Register\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={PATH.GALLERY} activeClassName={s.active}>\n                            Gallery\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={PATH.PAINT} activeClassName={s.active}>\n                            Paint\n                        </NavLink>\n                    </li>\n                </ul>\n            </div>\n            <div className={s.logOutBtn}>\n                <LogInOutButton />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { Button, TextField } from '@mui/material';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Inputs } from '../../common/components/form/types';\nimport s from '../../common/components/form/form.module.css';\nimport { useSelector } from 'react-redux';\nimport { createUser } from '../../features/loginSlice';\nimport { AppRootStateType, useAppDispatch } from '../../app/store';\nimport { Redirect } from 'react-router-dom';\nimport { PATH } from '../../common/constants/routes';\n\nexport function Register() {\n    const dispatch = useAppDispatch();\n    const isLoggedIn = useSelector<AppRootStateType, boolean>((state) => state.login.isAuth);\n    const {\n        watch,\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<Inputs>({\n        defaultValues: {\n            email: '',\n            password: '',\n        },\n        mode: 'onChange',\n    });\n\n    const onSubmit: SubmitHandler<Inputs> = (data) => {\n        dispatch(\n            createUser({\n                email: data.email,\n                password: data.password_repeat,\n            }),\n        );\n    };\n\n    if (isLoggedIn) return <Redirect to={PATH.PAINT} />;\n    return (\n        <div className={s.formContainer}>\n            <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\n                <div className={s.text}>Email</div>\n                <TextField\n                    {...register('email', {\n                        required: {\n                            value: true,\n                            message: 'Email is required',\n                        },\n                        pattern: {\n                            value: /^[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})$/,\n                            message: 'Invalid email',\n                        },\n                    })}\n                    color={'primary'}\n                    label={'email'}\n                    variant={'outlined'}\n                    className={s.input}\n                    autoComplete={'off'}\n                />\n                <ErrorMessage\n                    errors={errors}\n                    name=\"email\"\n                    render={({ message }) => <div className={s.error}>{message}</div>}\n                />\n\n                <div className={s.text}>Password</div>\n                <TextField\n                    {...register('password', {\n                        required: {\n                            value: true,\n                            message: 'Password is required',\n                        },\n                        minLength: {\n                            value: 6,\n                            message: 'Password should be at least 6 characters ',\n                        },\n                        maxLength: {\n                            value: 12,\n                            message: 'Password should be between 6 and 12 characters',\n                        },\n                    })}\n                    color={'primary'}\n                    label={'password'}\n                    variant={'outlined'}\n                    className={s.input}\n                    type=\"password\"\n                />\n                <ErrorMessage\n                    errors={errors}\n                    name=\"password\"\n                    render={({ message }) => <div className={s.error}>{message}</div>}\n                />\n\n                <div className={s.text}>Confirm password</div>\n                <TextField\n                    {...register('password_repeat', {\n                        validate: (value) => value === watch('password') || \"Passwords don't match.\",\n                    })}\n                    color={'primary'}\n                    label={'password'}\n                    variant={'outlined'}\n                    className={s.input}\n                    type=\"password\"\n                />\n                <ErrorMessage\n                    errors={errors}\n                    name=\"password_repeat\"\n                    render={({ message }) => <div className={s.error}>{message}</div>}\n                />\n\n                <div className={s.button}>\n                    <Button variant={'contained'} type={'submit'}>\n                        Registration\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useSelector } from 'react-redux';\nimport { AppRootStateType } from '../../../app/store';\nimport { useEffect } from 'react';\n\nexport function SimpleSnackbar() {\n    const [open, setOpen] = React.useState(false);\n    const [message, setMessage] = React.useState('');\n    const errorMessage = useSelector<AppRootStateType, string | null>((state) => state.app.error);\n\n    useEffect(() => {\n        if (errorMessage) {\n            setMessage(errorMessage);\n            setOpen(true);\n        }\n    }, [errorMessage]);\n\n    const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n        setMessage('');\n    };\n\n    const action = (\n        <React.Fragment>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"secondary\" onClick={handleClose}>\n                <CloseIcon fontSize=\"large\" />\n            </IconButton>\n        </React.Fragment>\n    );\n\n    return (\n        <div>\n            <Snackbar open={open} onClose={handleClose} message={message} action={action} autoHideDuration={6000} />\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/loader.f688384e.gif\";","import React from 'react';\nimport s from './preloader.module.css';\nimport LoaderGif from '../../../assets/img/loader.gif';\nimport { useSelector } from 'react-redux';\nimport { AppRootStateType } from '../../../app/store';\nimport { statusType } from '../../../features/appSlice';\n\nconst Preloader = () => {\n    const status = useSelector<AppRootStateType, statusType>((state) => state.app.status);\n\n    if (status === 'idle') {\n        return null;\n    }\n    return (\n        <div className={s.loaderContainer}>\n            <div className={s.loader}>\n                <img src={LoaderGif} alt=\"preloader\" className={s.img} />\n            </div>\n        </div>\n    );\n};\n\nexport default Preloader;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Login } from '../pages/login/Login';\nimport { PATH } from '../common/constants/routes';\nimport { Gallery } from '../pages/gallery/Gallery';\nimport { Paint } from '../pages/paint/Paint';\nimport Header from '../common/components/header/Header';\nimport { Register } from '../pages/register/Register';\nimport s from './app.module.css';\nimport { SimpleSnackbar } from '../common/components/errorSnackBar/ErrorSnackbar';\nimport Preloader from '../common/components/preloader/Preloader';\n\nfunction App() {\n    return (\n        <>\n            <HashRouter>\n                <Header />\n                <Switch>\n                    <Route exact path={['/', PATH.LOGIN]} render={() => <Login />} />\n                    <Route path={PATH.REGISTER} render={() => <Register />} />\n                    <Route path={PATH.GALLERY} render={() => <Gallery />} />\n                    <Route path={PATH.PAINT} render={() => <Paint />} />\n                </Switch>\n                <SimpleSnackbar />\n                <Preloader />\n            </HashRouter>\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"form_formContainer__18uta\",\"form\":\"form_form__3lK8f\",\"text\":\"form_text__3tXQA\",\"input\":\"form_input__inQsD\",\"blockRegistration\":\"form_blockRegistration__2UUrz\",\"regText\":\"form_regText__1jIHp\",\"regLink\":\"form_regLink__3eC_h\",\"error\":\"form_error__Fmz3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"toolbar_toolbar__29IwR\",\"toolbar_lineWidth\":\"toolbar_toolbar_lineWidth__3f0bX\",\"text\":\"toolbar_text__3NbQw\",\"lineWidth_input\":\"toolbar_lineWidth_input__ygiO3\",\"color_input\":\"toolbar_color_input__3TYSn\",\"colorContainer\":\"toolbar_colorContainer__1Kz4-\",\"toolbar_btn\":\"toolbar_toolbar_btn__10VFT\",\"activeBtn\":\"toolbar_activeBtn__3ctpQ\",\"brush\":\"toolbar_brush__Ck6iw\",\"rect\":\"toolbar_rect__3K5QC\",\"circle\":\"toolbar_circle__2H7F6\",\"eraser\":\"toolbar_eraser__3wWnt\",\"line\":\"toolbar_line__2p227\",\"clear\":\"toolbar_clear__1h-dW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__vvpF6\",\"menuWrapper\":\"header_menuWrapper__2segj\",\"menu\":\"header_menu__200p7\",\"active\":\"header_active__35kRd\",\"current\":\"header_current__11ym6\",\"logOutBtn\":\"header_logOutBtn__3ttFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"canvas_mainWrapper__37dht\",\"buttonsContainer\":\"canvas_buttonsContainer__2V2yG\",\"button\":\"canvas_button__1dMDm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"preloader_loaderContainer__10w0G\",\"loader\":\"preloader_loader__1BMzC\"};"],"sourceRoot":""}