{"version":3,"sources":["pages/gallery/gallery.module.scss","components/preloader/preloader.module.scss","redux/types/actionTypes.ts","components/routes/path.ts","components/logInOutButton/logInOutButton.tsx","components/header/Header.tsx","components/errorSnackBar/ErrorSnackbar.tsx","assets/img/loader.gif","components/preloader/Preloader.tsx","components/form/Form.tsx","components/canvas/draw.ts","components/canvas/Canvas.tsx","pages/gallery/Gallery.tsx","components/routes/Routes.tsx","pages/login/Login.tsx","pages/register/Register.tsx","pages/paint/Paint.tsx","App.tsx","redux/reducers/appReducer.ts","redux/reducers/galleryReducer.ts","redux/reducers/authReducer.ts","redux/reducers/rootReducer.ts","firebase/firebase.ts","services/authService.ts","redux/actions/appAction.ts","redux/actions/authActions.ts","redux/sagas/authSaga.ts","services/galleryService.ts","redux/sagas/gallerySaga.ts","redux/sagas/rootSaga.ts","redux/store.ts","index.tsx","components/form/form.module.scss","pages/paint/toolbar.module.scss","components/header/header.module.scss","components/canvas/canvas.module.scss"],"names":["module","exports","appActionTypes","authActionTypes","galleryActionTypes","PATH","LogInOutButton","isAuth","useSelector","state","auth","dispatch","useDispatch","Button","variant","type","onClick","LOG_OUT","Header","className","style","header","menu","to","activeClassName","active","logOutBtn","SimpleSnackbar","React","open","setOpen","message","setMessage","errorMessage","app","error","useEffect","handleClose","event","reason","action","IconButton","size","color","fontSize","Snackbar","onClose","autoHideDuration","Preloader","status","loaderContainer","src","LoaderGif","alt","Form","props","useForm","defaultValues","email","password","mode","watch","register","handleSubmit","errors","formState","formContainer","onSubmit","text","TextField","required","value","pattern","label","textField","autoComplete","name","render","minLength","maxLength","showBlockConfirmPassword","validate","buttonName","showBlockToRegistration","blockToRegistration","regText","calculateWidthAndHeight","target","startX","startY","width","pageX","offsetLeft","height","pageY","offsetTop","drawByCoordinates","context","currentX","currentY","lineTo","stroke","clearCanvasAndDrawImageData","canvasRef","canvasData","clearRect","current","putImageData","beginPath","Canvas","useRef","useState","setContext","setStartX","setStartY","userEmail","userId","uid","isPainting","setIsPainting","setCanvasData","undoList","setUndoList","redoList","getContext","mainWrapper","ref","onMouseDown","getImageData","activeTool","toDataURL","onMouseMove","strokeStyle","outlineColor","fillStyle","fillColor","lineWidth","dimensions","fillRect","strokeRect","r","Math","sqrt","arc","PI","fill","moveTo","onMouseUp","buttonsContainer","button","length","dataUrl","pop","push","img","Image","onload","drawImage","SAVE_ART","payload","canvasDataUrl","Gallery","userEmails","gallery","usersEmail","usersEmailsLabel","filter","item","index","indexOf","map","e","id","images","selectedUserEmail","GET_USER_EMAILS","GET_ART","Autocomplete","disablePortal","options","renderInput","params","onInputChange","SET_SELECTED_USER","inputSelect","imageWrapper","image","Routes","privateRoutes","path","component","exact","publicRoutes","data","LOGIN","REGISTER","password_repeat","setActiveTool","setLineWidth","setOutlineColor","setFillColor","toolbar","activeBtn","colorContainer","onChange","lineWidthContainer","min","max","App","initialState","rootReducer","combineReducers","SET_ERROR","SET_STATUS","SET_USER_DATA","SET_USERS_EMAIL","SET_IMAGES","arts","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dataBase","getFirestore","registerUser","a","createUserWithEmailAndPassword","user","loginUser","signInWithEmailAndPassword","logOutUser","signOut","appStatus","createAction","setAuthUserData","registerSaga","loginSaga","logOutSaga","authWatcher","put","call","userData","userUid","takeEvery","getUsersEmail","getDocs","query","collection","querySnapshot","docs","doc","getArt","q","where","saveArt","artRef","addDoc","getUsersEmailSaga","getArtSaga","saveArtSaga","galleryWatcher","rootSaga","sagas","all","s","spawn","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a5db333.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSelect\":\"gallery_inputSelect__2PVPx\",\"imageWrapper\":\"gallery_imageWrapper__2EejX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"preloader_loaderContainer__1L9r3\"};","export enum appActionTypes {\n    SET_ERROR = 'SET_ERROR',\n    SET_STATUS = 'SET_STATUS',\n}\n\nexport enum authActionTypes {\n    REGISTER = 'REGISTER',\n    LOGIN = 'LOGIN',\n    LOG_OUT = '  LOG_OUT',\n    SET_UID = 'SET_UID',\n    SET_USER_DATA = 'SET_USER_DATA',\n}\n\nexport enum galleryActionTypes {\n    SET_USERS_EMAIL = ' SET_USERS_EMAIL',\n    SET_SELECTED_USER = ' SET_SELECTED_USER',\n    SET_IMAGES = ' SET_IMAGES',\n    GET_USER_EMAILS = 'GET_USER_EMAILS',\n    SAVE_ART = ' SAVE_ART',\n    GET_ART = 'GET_ART',\n}\n","export const PATH = {\n    LOGIN: '/login',\n    REGISTER: '/register',\n    GALLERY: '/gallery',\n    PAINT: '/paint',\n};\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from '@mui/material';\r\nimport { RootStateType } from '../../redux/reducers/rootReducer';\r\nimport { authActionTypes } from '../../redux/types/actionTypes';\r\n\r\nconst LogInOutButton = () => {\r\n    const isAuth = useSelector<RootStateType, boolean>((state) => state.auth.isAuth);\r\n    const dispatch = useDispatch();\r\n    const onLogOutClick = () => {\r\n        dispatch({ type: authActionTypes.LOG_OUT });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isAuth ? (\r\n                <Button variant={'contained'} type={'submit'} onClick={onLogOutClick}>\r\n                    Log out\r\n                </Button>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LogInOutButton;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { PATH } from '../routes/path';\r\nimport style from './header.module.scss';\r\nimport LogInOutButton from '../logInOutButton/logInOutButton';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootStateType } from '../../redux/reducers/rootReducer';\r\n\r\nfunction Header() {\r\n    // @ts-ignore\r\n    const isAuth = useSelector<RootStateType, boolean>((state) => state.auth.isAuth);\r\n    return (\r\n        <div className={style.header}>\r\n            <div className={style.menu}>\r\n                <ul>\r\n                    {isAuth || (\r\n                        <>\r\n                            <li>\r\n                                <NavLink to={PATH.LOGIN} activeClassName={style.active}>\r\n                                    Login\r\n                                </NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to={PATH.REGISTER} activeClassName={style.active}>\r\n                                    Register\r\n                                </NavLink>\r\n                            </li>\r\n                        </>\r\n                    )}\r\n                    <li>\r\n                        <NavLink to={PATH.GALLERY} activeClassName={style.active}>\r\n                            Gallery\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={PATH.PAINT} activeClassName={style.active}>\r\n                            Paint\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className={style.logOutBtn}>\r\n                <LogInOutButton />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useSelector } from 'react-redux';\nimport { RootStateType } from '../../redux/reducers/rootReducer';\n\nexport function SimpleSnackbar() {\n    const [open, setOpen] = React.useState(false);\n    const [message, setMessage] = React.useState('');\n    // @ts-ignore\n    const errorMessage = useSelector<RootStateType, string | null>((state) => state.app.error);\n\n    useEffect(() => {\n        if (errorMessage) {\n            setMessage(errorMessage);\n            setOpen(true);\n        }\n    }, [errorMessage]);\n\n    const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n        setMessage('');\n    };\n\n    const action = (\n        <React.Fragment>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"secondary\" onClick={handleClose}>\n                <CloseIcon fontSize=\"large\" />\n            </IconButton>\n        </React.Fragment>\n    );\n\n    return (\n        <div>\n            <Snackbar open={open} onClose={handleClose} message={message} action={action} autoHideDuration={6000} />\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/loader.f688384e.gif\";","import React from 'react';\nimport style from './preloader.module.scss';\nimport LoaderGif from '../../assets/img/loader.gif';\nimport { useSelector } from 'react-redux';\nimport { RootStateType } from '../../redux/reducers/rootReducer';\nimport { statusType } from '../../redux/types/types';\n\nconst Preloader = () => {\n    // @ts-ignore\n    const status = useSelector<RootStateType, statusType>((state) => state.app.status);\n    if (status === 'loading') {\n        return (\n            <div className={style.loaderContainer}>\n                <div>\n                    <img src={LoaderGif} alt=\"preloader\" />\n                </div>\n            </div>\n        );\n    }\n    return <></>;\n};\n\nexport default Preloader;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { formInput, formPropsType } from './types';\nimport style from './form.module.scss';\nimport { Button, TextField } from '@mui/material';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { NavLink } from 'react-router-dom';\nimport { PATH } from '../routes/path';\n\nconst Form = (props: formPropsType) => {\n    const {\n        watch,\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<formInput>({\n        defaultValues: {\n            email: '',\n            password: '',\n        },\n        mode: 'onChange',\n    });\n\n    return (\n        <div className={style.formContainer}>\n            <form onSubmit={handleSubmit(props.onSubmit)}>\n                <div className={style.text}>Email</div>\n                <TextField\n                    {...register('email', {\n                        required: {\n                            value: true,\n                            message: 'Email is required',\n                        },\n                        pattern: {\n                            value: /^[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})$/,\n                            message: 'Invalid email',\n                        },\n                    })}\n                    color={'primary'}\n                    label={'email'}\n                    variant={'outlined'}\n                    className={style.textField}\n                    autoComplete={'off'}\n                />\n                <ErrorMessage\n                    errors={errors}\n                    name=\"email\"\n                    render={({ message }) => <div className={style.error}>{message}</div>}\n                />\n\n                <div className={style.text}>Password</div>\n                <TextField\n                    {...register('password', {\n                        required: {\n                            value: true,\n                            message: 'Password is required',\n                        },\n                        minLength: {\n                            value: 6,\n                            message: 'Password should be at least 6 characters ',\n                        },\n                        maxLength: {\n                            value: 12,\n                            message: 'Password should be between 6 and 12 characters',\n                        },\n                    })}\n                    color={'primary'}\n                    label={'password'}\n                    variant={'outlined'}\n                    className={style.textField}\n                    type=\"password\"\n                />\n                <ErrorMessage\n                    errors={errors}\n                    name=\"password\"\n                    render={({ message }) => <div className={style.error}>{message}</div>}\n                />\n\n                {props.showBlockConfirmPassword && (\n                    <>\n                        <div className={style.text}>Confirm password</div>\n                        <TextField\n                            {...register('password_repeat', {\n                                validate: (value) => value === watch('password') || \"Passwords don't match.\",\n                            })}\n                            color={'primary'}\n                            label={'password'}\n                            variant={'outlined'}\n                            className={style.textField}\n                            type=\"password\"\n                        />\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"password_repeat\"\n                            render={({ message }) => <div className={style.error}>{message}</div>}\n                        />\n                    </>\n                )}\n\n                <Button variant={'contained'} type={'submit'}>\n                    {props.buttonName}\n                </Button>\n\n                {props.showBlockToRegistration && (\n                    <div className={style.blockToRegistration}>\n                        <div className={style.regText}>Don't have an account?</div>\n                        <div>\n                            <NavLink to={PATH.REGISTER}>Registration</NavLink>\n                        </div>\n                    </div>\n                )}\n            </form>\n        </div>\n    );\n};\n\nexport default Form;\n","import React from 'react';\n\nexport function calculateWidthAndHeight(\n    event: React.MouseEvent,\n    target: HTMLCanvasElement,\n    startX: number,\n    startY: number,\n) {\n    const currentX = event.pageX - target.offsetLeft;\n    const currentY = event.pageY - target.offsetTop;\n    const width = currentX - startX;\n    const height = currentY - startY;\n    return {\n        width,\n        height,\n    };\n}\n\nexport function drawByCoordinates(\n    context: CanvasRenderingContext2D,\n    event: React.MouseEvent,\n    target: HTMLCanvasElement,\n) {\n    let currentX = event.pageX - target.offsetLeft;\n    let currentY = event.pageY - target.offsetTop;\n    context.lineTo(currentX, currentY);\n    context.stroke();\n}\n\nexport function clearCanvasAndDrawImageData(\n    context: CanvasRenderingContext2D,\n    canvasRef: React.MutableRefObject<HTMLCanvasElement | null>,\n    canvasData: ImageData | undefined,\n) {\n    context.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\n    if (canvasData) {\n        context.putImageData(canvasData, 0, 0);\n    }\n    context.beginPath();\n}\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport style from './canvas.module.scss';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport UndoIcon from '@mui/icons-material/Undo';\r\nimport RedoIcon from '@mui/icons-material/Redo';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { calculateWidthAndHeight, clearCanvasAndDrawImageData, drawByCoordinates } from './draw';\r\nimport { canvasPropsType } from './types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateType } from '../../redux/reducers/rootReducer';\r\nimport { galleryActionTypes } from '../../redux/types/actionTypes';\r\n\r\nconst Canvas = (props: canvasPropsType) => {\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\r\n    const [startX, setStartX] = useState<number>(0);\r\n    const [startY, setStartY] = useState<number>();\r\n    const userEmail = useSelector<RootStateType, string | null>((state) => state.auth.userEmail);\r\n    const userId = useSelector<RootStateType, string | null>((state) => state.auth.uid);\r\n    const [isPainting, setIsPainting] = useState<boolean>(false);\r\n    const [canvasData, setCanvasData] = useState<ImageData | undefined>();\r\n    const dispatch = useDispatch();\r\n    const [undoList, setUndoList] = useState<string[]>([]);\r\n    const redoList: string[] = [];\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current) {\r\n            setContext(canvasRef.current.getContext('2d'));\r\n        }\r\n    }, []);\r\n\r\n    const onMouseDownHandler = (event: React.MouseEvent) => {\r\n        const target = event.target as HTMLCanvasElement;\r\n        if (context) {\r\n            context.beginPath();\r\n            setStartX(event.pageX - target.offsetLeft);\r\n            setStartY(event.pageY - target.offsetTop);\r\n            setIsPainting(true);\r\n            setCanvasData(context.getImageData(0, 0, canvasRef.current!.width, canvasRef.current!.height));\r\n            if (props.activeTool === 'clear') {\r\n                context.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\r\n            }\r\n        }\r\n        if (canvasRef.current) {\r\n            setUndoList([...undoList, canvasRef.current.toDataURL()]);\r\n        }\r\n    };\r\n\r\n    const onMouseMoveHandler = (event: React.MouseEvent) => {\r\n        const target = event.target as HTMLCanvasElement;\r\n        if (isPainting && context && startX && startY && canvasRef.current) {\r\n            context.strokeStyle = props.outlineColor;\r\n            context.fillStyle = props.fillColor;\r\n            context.lineWidth = props.lineWidth;\r\n            switch (props.activeTool) {\r\n                case 'rect':\r\n                    const dimensions = calculateWidthAndHeight(event, target, startX, startY);\r\n                    clearCanvasAndDrawImageData(context, canvasRef, canvasData);\r\n                    context.fillRect(startX, startY, dimensions.width, dimensions.height);\r\n                    context.strokeRect(startX, startY, dimensions.width, dimensions.height);\r\n                    break;\r\n                case 'circle': {\r\n                    const dimensions = calculateWidthAndHeight(event, target, startX, startY);\r\n                    clearCanvasAndDrawImageData(context, canvasRef, canvasData);\r\n                    let r = Math.sqrt(dimensions.width ** 2 + dimensions.height ** 2);\r\n                    context.arc(startX, startY, r, 0, 2 * Math.PI, false);\r\n                    context.fill();\r\n                    context.stroke();\r\n                    break;\r\n                }\r\n                case 'line': {\r\n                    clearCanvasAndDrawImageData(context, canvasRef, canvasData);\r\n                    context.moveTo(startX, startY);\r\n                    drawByCoordinates(context, event, target);\r\n                    break;\r\n                }\r\n                case 'brush':\r\n                    drawByCoordinates(context, event, target);\r\n                    break;\r\n                case 'eraser':\r\n                    context.strokeStyle = 'white';\r\n                    drawByCoordinates(context, event, target);\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const onMouseUpHandler = () => {\r\n        setIsPainting(false);\r\n    };\r\n\r\n    const undo = () => {\r\n        if (undoList.length > 0) {\r\n            let dataUrl = undoList.pop();\r\n            redoList.push(canvasRef.current!.toDataURL());\r\n            let img = new Image();\r\n            if (typeof dataUrl === 'string') {\r\n                img.src = dataUrl;\r\n            }\r\n            img.onload = () => {\r\n                context!.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\r\n                context!.drawImage(img, 0, 0, canvasRef.current!.width, canvasRef.current!.height);\r\n            };\r\n        } else {\r\n            context!.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\r\n        }\r\n    };\r\n    const redo = () => {\r\n        if (redoList.length > 0) {\r\n            let dataUrl = redoList.pop();\r\n            undoList.push(canvasRef.current!.toDataURL());\r\n            let img = new Image();\r\n            if (typeof dataUrl === 'string') {\r\n                img.src = dataUrl;\r\n            }\r\n            img.onload = () => {\r\n                context!.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\r\n                context!.drawImage(img, 0, 0, canvasRef.current!.width, canvasRef.current!.height);\r\n            };\r\n        }\r\n    };\r\n    const save = () => {\r\n        dispatch({\r\n            type: galleryActionTypes.SAVE_ART,\r\n            payload: {\r\n                userEmail,\r\n                userId,\r\n                canvasDataUrl: canvasRef.current!.toDataURL(),\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={style.mainWrapper}>\r\n            <canvas\r\n                ref={canvasRef}\r\n                onMouseDown={onMouseDownHandler}\r\n                onMouseMove={onMouseMoveHandler}\r\n                onMouseUp={onMouseUpHandler}\r\n                width=\"950px\"\r\n                height=\"570px\"\r\n            />\r\n            <div className={style.buttonsContainer}>\r\n                <IconButton color=\"primary\" className={style.button} onClick={undo}>\r\n                    <UndoIcon fontSize={'large'} />\r\n                </IconButton>\r\n                <IconButton color=\"primary\" className={style.button} onClick={redo}>\r\n                    <RedoIcon fontSize={'large'} />\r\n                </IconButton>\r\n                <IconButton color=\"primary\" className={style.button} onClick={save}>\r\n                    <SaveIcon fontSize={'large'} />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Canvas;\r\n","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport { Autocomplete, TextField } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport style from './gallery.module.scss';\r\nimport { RootStateType } from '../../redux/reducers/rootReducer';\r\nimport { galleryActionTypes } from '../../redux/types/actionTypes';\r\n\r\nexport const Gallery = () => {\r\n    const dispatch = useDispatch();\r\n    const userEmails = useSelector<RootStateType, string[]>((state) => state.gallery.usersEmail);\r\n    const uniqueUsersEmails = userEmails.filter(function (item, index) {\r\n        return userEmails.indexOf(item) == index;\r\n    });\r\n    const usersEmailsLabel = uniqueUsersEmails.map((e) => {\r\n        return {\r\n            label: e,\r\n            id: e,\r\n        };\r\n    });\r\n    const images = useSelector<RootStateType, []>((state) => state.gallery.images);\r\n    const selectedUserEmail = useSelector<RootStateType, string>((state) => state.gallery.selectedUserEmail);\r\n    const onInputChange = (event: SyntheticEvent, value: string) => {\r\n        dispatch({\r\n            type: galleryActionTypes.SET_SELECTED_USER,\r\n            value,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: galleryActionTypes.GET_USER_EMAILS });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: galleryActionTypes.GET_ART,\r\n            payload: { selectedUserEmail },\r\n        });\r\n    }, [selectedUserEmail]);\r\n\r\n    return (\r\n        <>\r\n            <Autocomplete\r\n                disablePortal\r\n                options={usersEmailsLabel}\r\n                renderInput={(params) => <TextField {...params} label=\"Select user\" />}\r\n                onInputChange={onInputChange}\r\n                value={{\r\n                    label: selectedUserEmail,\r\n                    id: selectedUserEmail,\r\n                }}\r\n                className={style.inputSelect}\r\n            />\r\n            <div className={style.imageWrapper}>\r\n                {images.map(({ image, id }) => (\r\n                    <img src={image} alt={id} key={id} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { FunctionComponent } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { PATH } from './path';\nimport { Login } from '../../pages/login/Login';\nimport { Register } from '../../pages/register/Register';\nimport { Paint } from '../../pages/paint/Paint';\nimport { useSelector } from 'react-redux';\nimport { RootStateType } from '../../redux/reducers/rootReducer';\nimport { Gallery } from '../../pages/gallery/Gallery';\n\nexport const Routes = () => {\n    const isAuth = useSelector<RootStateType, boolean>((state) => state.auth.isAuth);\n\n    return (\n        <>\n            {isAuth ? (\n                <Switch>\n                    {privateRoutes.map(({ path, component }) => (\n                        <Route key={path} exact path={path} component={component} />\n                    ))}\n                    <Redirect to={PATH.PAINT} />;\n                </Switch>\n            ) : (\n                <Switch>\n                    {publicRoutes.map(({ path, component }) => (\n                        <Route key={path} exact path={path} component={component} />\n                    ))}\n                    <Redirect to={PATH.LOGIN} />\n                </Switch>\n            )}\n        </>\n    );\n};\n\nconst publicRoutes: RouteType[] = [\n    {\n        path: PATH.LOGIN,\n        component: Login,\n    },\n    {\n        path: PATH.REGISTER,\n        component: Register,\n    },\n    {\n        path: PATH.GALLERY,\n        component: Gallery,\n    },\n];\nconst privateRoutes: RouteType[] = [\n    {\n        path: PATH.PAINT,\n        component: Paint,\n    },\n    {\n        path: PATH.GALLERY,\n        component: Gallery,\n    },\n];\n\ntype RouteType = {\n    path: string;\n    component: FunctionComponent;\n};\n","import React from 'react';\nimport { SubmitHandler } from 'react-hook-form';\nimport Form from '../../components/form/Form';\nimport { formInput } from '../../components/form/types';\nimport { useDispatch } from 'react-redux';\nimport { authActionTypes } from '../../redux/types/actionTypes';\n\nexport function Login() {\n    const dispatch = useDispatch();\n\n    const onSubmit: SubmitHandler<formInput> = (data) => {\n        dispatch({\n            type: authActionTypes.LOGIN,\n            payload: {\n                email: data.email,\n                password: data.password,\n            },\n        });\n    };\n\n    return (\n        <Form\n            onSubmit={onSubmit}\n            showBlockConfirmPassword={false}\n            showBlockToRegistration={true}\n            buttonName={'Log in'}\n        />\n    );\n}\n","import React from 'react';\nimport { SubmitHandler } from 'react-hook-form';\nimport Form from '../../components/form/Form';\nimport { formInput } from '../../components/form/types';\nimport { useDispatch } from 'react-redux';\nimport { authActionTypes } from '../../redux/types/actionTypes';\n\nexport function Register() {\n    const dispatch = useDispatch();\n    const onSubmit: SubmitHandler<formInput> = (data) => {\n        dispatch({\n            type: authActionTypes.REGISTER,\n            payload: {\n                email: data.email,\n                password: data.password_repeat,\n            },\n        });\n    };\n    return (\n        <Form\n            onSubmit={onSubmit}\n            showBlockConfirmPassword={true}\n            showBlockToRegistration={false}\n            buttonName={'Registration'}\n        />\n    );\n}\n","import React, { useState } from 'react';\nimport Canvas from '../../components/canvas/Canvas';\nimport style from './toolbar.module.scss';\n\nexport const Paint = () => {\n    const toolsLeftBlock: string[] = ['brush', 'rect', 'circle', 'line', 'eraser', 'clear'];\n    const [activeTool, setActiveTool] = useState<string>('brush');\n    const [lineWidth, setLineWidth] = useState<number>(1);\n    const [outlineColor, setOutlineColor] = useState<string>('#000000');\n    const [fillColor, setFillColor] = useState<string>('#FFFFFF');\n\n    return (\n        <>\n            <div className={style.toolbar}>\n                {toolsLeftBlock.map((name) => {\n                    return (\n                        <button\n                            key={name}\n                            className={`${style[name]}  ${activeTool === name ? style.activeBtn : ''}`}\n                            onClick={() => setActiveTool(name)}\n                        />\n                    );\n                })}\n\n                <div className={style.colorContainer}>\n                    <div className={style.text}>Line color</div>\n                    <input type=\"color\" value={outlineColor} onChange={(e) => setOutlineColor(e.target.value)} />\n                </div>\n                <div className={style.colorContainer}>\n                    <div className={style.text}>Fill color</div>\n                    <input type=\"color\" value={fillColor} onChange={(e) => setFillColor(e.target.value)} />\n                </div>\n\n                <div className={style.lineWidthContainer}>\n                    <div className={style.text}>Line width</div>\n                    <input\n                        type=\"number\"\n                        value={lineWidth}\n                        min={1}\n                        max={50}\n                        onChange={(e) => setLineWidth(+e.target.value)}\n                    />\n                </div>\n            </div>\n            <Canvas activeTool={activeTool} lineWidth={lineWidth} outlineColor={outlineColor} fillColor={fillColor} />\n        </>\n    );\n};\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport Header from './components/header/Header';\nimport { SimpleSnackbar } from './components/errorSnackBar/ErrorSnackbar';\nimport Preloader from './components/preloader/Preloader';\nimport { Routes } from './components/routes/Routes';\n\nfunction App() {\n    return (\n        <>\n            <HashRouter>\n                <Header />\n                <Routes />\n                <SimpleSnackbar />\n                <Preloader />\n            </HashRouter>\n        </>\n    );\n}\n\nexport default App;\n","import { appActionTypes } from '../types/actionTypes';\nimport { appActionsType, appInitialState } from '../types/types';\n\nconst initialState: appInitialState = {\n    error: null,\n    status: 'idle',\n};\n\nexport function appReducer(state: appInitialState = initialState, action: appActionsType) {\n    debugger;\n    switch (action.type) {\n        case appActionTypes.SET_ERROR:\n            return {\n                ...state,\n                error: action.errorMessage,\n            };\n        case appActionTypes.SET_STATUS:\n            return {\n                ...state,\n                status: action.payload,\n            };\n    }\n    return state;\n}\n","import { galleryActionTypes } from '../types/actionTypes';\nimport { galleryActionsType, galleryInitialState } from '../types/types';\n\nconst initialState: galleryInitialState = {\n    usersEmail: [],\n    selectedUserEmail: '',\n    images: [],\n};\n\nexport function galleryReducer(state: galleryInitialState = initialState, action: galleryActionsType) {\n    switch (action.type) {\n        case galleryActionTypes.SET_USERS_EMAIL:\n            return {\n                ...state,\n                usersEmail: action.userEmails,\n            };\n        case galleryActionTypes.SET_SELECTED_USER:\n            return {\n                ...state,\n                selectedUserEmail: action.value,\n            };\n        case galleryActionTypes.SET_IMAGES:\n            return {\n                ...state,\n                images: action.arts,\n            };\n    }\n    return state;\n}\n","import { authActionTypes } from '../types/actionTypes';\nimport { authInitialState, setAuthUserData } from '../types/types';\n\nconst initialState: authInitialState = {\n    userEmail: null,\n    uid: null,\n    isAuth: false,\n};\n\nexport function authReducer(state: authInitialState = initialState, action: setAuthUserData) {\n    switch (action.type) {\n        case authActionTypes.SET_USER_DATA:\n            return {\n                ...state,\n                userEmail: action.payload.email,\n                uid: action.payload.uid,\n                isAuth: action.payload.isAuth,\n            };\n    }\n    return state;\n}\n","import { combineReducers } from 'redux';\nimport { appReducer } from './appReducer';\nimport { galleryReducer } from './galleryReducer';\nimport { authReducer } from './authReducer';\n\nexport const rootReducer = combineReducers({\n    app: appReducer,\n    auth: authReducer,\n    gallery: galleryReducer,\n});\n\nexport type RootStateType = ReturnType<typeof rootReducer>;\n","import firebase from 'firebase/compat';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n});\r\n\r\nexport const auth = getAuth();\r\nexport const dataBase = getFirestore();\r\n","import { auth } from '../firebase/firebase';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\n\r\nexport const registerUser = async (email: string, password: string) => {\r\n    const data = await createUserWithEmailAndPassword(auth, email, password);\r\n    return data.user;\r\n};\r\nexport const loginUser = async (email: string, password: string) => {\r\n    const data = await signInWithEmailAndPassword(auth, email, password);\r\n    return data.user;\r\n};\r\n\r\nexport const logOutUser = (): Promise<void> => signOut(auth);\r\n","import { appActionTypes } from '../types/actionTypes';\nimport { createAction } from '@reduxjs/toolkit';\nimport { statusType } from '../types/types';\n\nexport const appStatus = createAction(appActionTypes.SET_STATUS, (status: statusType) => {\n    return {\n        payload: status,\n    };\n});\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { authActionTypes } from '../types/actionTypes';\r\n\r\nexport const setAuthUserData = createAction(\r\n    authActionTypes.SET_USER_DATA,\r\n    (email: string | null, uid: string | null, isAuth: boolean) => {\r\n        return {\r\n            payload: {\r\n                email,\r\n                uid,\r\n                isAuth,\r\n            },\r\n        };\r\n    },\r\n);\r\n","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { appActionTypes, authActionTypes } from '../types/actionTypes';\r\nimport { User } from '@firebase/auth-types';\r\nimport { loginUser, logOutUser, registerUser } from '../../services/authService';\r\nimport { sagaPayloadType } from '../types/types';\r\nimport { appStatus } from '../actions/appAction';\r\nimport { setAuthUserData } from '../actions/authActions';\r\n\r\nfunction* registerSaga({ payload }: sagaPayloadType) {\r\n    const { email, password } = payload;\r\n    try {\r\n        yield put(appStatus('loading'));\r\n        const userData: User = yield call(registerUser, email, password);\r\n        const userEmail = userData.email;\r\n        const userUid = userData.uid;\r\n        yield put(setAuthUserData(userEmail, userUid, true));\r\n        yield put(appStatus('idle'));\r\n    } catch (error) {\r\n        yield put(appStatus('idle'));\r\n        const errorMessage = (error as Error)?.message;\r\n        yield put({\r\n            type: appActionTypes.SET_ERROR,\r\n            errorMessage,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* loginSaga({ payload }: sagaPayloadType) {\r\n    const { email, password } = payload;\r\n    try {\r\n        yield put(appStatus('loading'));\r\n        const userData: User = yield call(loginUser, email, password);\r\n        const userEmail = userData.email;\r\n        const userUid = userData.uid;\r\n        yield put(setAuthUserData(userEmail, userUid, true));\r\n        yield put(appStatus('idle'));\r\n    } catch (error) {\r\n        yield put(appStatus('idle'));\r\n        const errorMessage = (error as Error)?.message;\r\n        yield put({\r\n            type: appActionTypes.SET_ERROR,\r\n            errorMessage,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* logOutSaga() {\r\n    yield put(appStatus('loading'));\r\n    try {\r\n        yield call(logOutUser);\r\n        yield put(setAuthUserData(null, null, false));\r\n        yield put(appStatus('idle'));\r\n    } catch (error) {\r\n        yield put(appStatus('idle'));\r\n        const errorMessage = (error as Error)?.message;\r\n        yield put({\r\n            type: appActionTypes.SET_ERROR,\r\n            errorMessage,\r\n        });\r\n    }\r\n}\r\n\r\nexport function* authWatcher(): Generator {\r\n    yield takeEvery(authActionTypes.REGISTER, registerSaga);\r\n    yield takeEvery(authActionTypes.LOGIN, loginSaga);\r\n    yield takeEvery(authActionTypes.LOG_OUT, logOutSaga);\r\n}\r\n","import { addDoc, collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { dataBase } from '../firebase/firebase';\r\n\r\nexport const getUsersEmail = async () => {\r\n    const querySnapshot = await getDocs(query(collection(dataBase, 'artCollection')));\r\n    return querySnapshot.docs.map((doc) => {\r\n        return doc.data().userEmail;\r\n    });\r\n};\r\n\r\nexport const getArt = async (userEmail: string) => {\r\n    let q = await query(collection(dataBase, 'artCollection'));\r\n    if (userEmail) {\r\n        debugger;\r\n        q = await query(collection(dataBase, 'artCollection'), where('userEmail', '==', userEmail));\r\n    }\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map((doc) => {\r\n        return {\r\n            image: doc.data().canvasDataUrl,\r\n        };\r\n    });\r\n};\r\n\r\nexport const saveArt = async (userEmail: string, userId: string, canvasDataUrl: string) => {\r\n    const artRef = collection(dataBase, 'artCollection');\r\n    await addDoc(artRef, {\r\n        userEmail,\r\n        userId,\r\n        canvasDataUrl,\r\n    });\r\n};\r\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { appStatus } from '../actions/appAction';\nimport { User } from '@firebase/auth-types';\nimport { appActionTypes, galleryActionTypes } from '../types/actionTypes';\nimport { getArt, getUsersEmail, saveArt } from '../../services/galleryService';\nimport { getArtSagaParamsType, saveArtSagaParamsType } from '../types/types';\n\nfunction* getUsersEmailSaga() {\n    try {\n        yield put(appStatus('loading'));\n        const userEmails: User = yield call(getUsersEmail);\n        yield put({\n            type: galleryActionTypes.SET_USERS_EMAIL,\n            userEmails,\n        });\n        yield put(appStatus('idle'));\n    } catch (error) {\n        yield put(appStatus('idle'));\n        const errorMessage = (error as Error)?.message;\n        yield put({\n            type: appActionTypes.SET_ERROR,\n            errorMessage,\n        });\n    }\n}\n\nfunction* getArtSaga({ payload }: getArtSagaParamsType) {\n    const { selectedUserEmail } = payload;\n    try {\n        yield put(appStatus('loading'));\n        const arts: User = yield call(getArt, selectedUserEmail);\n        yield put({\n            type: galleryActionTypes.SET_IMAGES,\n            arts,\n        });\n        yield put(appStatus('idle'));\n    } catch (error) {\n        yield put(appStatus('idle'));\n        const errorMessage = (error as Error)?.message;\n        yield put({\n            type: appActionTypes.SET_ERROR,\n            errorMessage,\n        });\n    }\n}\n\nfunction* saveArtSaga({ payload }: saveArtSagaParamsType) {\n    debugger;\n    const { userEmail, userId, canvasDataUrl } = payload;\n    try {\n        yield put(appStatus('loading'));\n        yield call(saveArt, userEmail, userId, canvasDataUrl);\n        yield put(appStatus('idle'));\n    } catch (error) {\n        yield put(appStatus('idle'));\n        const errorMessage = (error as Error)?.message;\n        yield put({\n            type: appActionTypes.SET_ERROR,\n            errorMessage,\n        });\n    }\n}\n\nexport function* galleryWatcher(): Generator {\n    yield takeEvery(galleryActionTypes.GET_ART, getArtSaga);\n    yield takeEvery(galleryActionTypes.SAVE_ART, saveArtSaga);\n    yield takeEvery(galleryActionTypes.GET_USER_EMAILS, getUsersEmailSaga);\n}\n","import { all, spawn } from 'redux-saga/effects';\r\nimport { authWatcher } from './authSaga';\r\nimport { galleryWatcher } from './gallerySaga';\r\n\r\nexport default function* rootSaga() {\r\n    const sagas = [authWatcher, galleryWatcher];\r\n\r\n    yield all(sagas.map((s) => spawn(s)));\r\n}\r\n","import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducer } from './reducers/rootReducer';\nimport rootSaga from './sagas/rootSaga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"form_formContainer__22Jre\",\"text\":\"form_text__2sD7c\",\"blockToRegistration\":\"form_blockToRegistration__3MEWL\",\"regText\":\"form_regText__18lrv\",\"textField\":\"form_textField__35rw2\",\"error\":\"form_error__3RLCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"toolbar_toolbar__33LFZ\",\"activeBtn\":\"toolbar_activeBtn__3MlZv\",\"brush\":\"toolbar_brush__1sKx5\",\"rect\":\"toolbar_rect__18kmX\",\"circle\":\"toolbar_circle__1rueC\",\"eraser\":\"toolbar_eraser__3KaDL\",\"line\":\"toolbar_line__Qo7oS\",\"clear\":\"toolbar_clear__2YYc6\",\"text\":\"toolbar_text__1ckZ2\",\"colorContainer\":\"toolbar_colorContainer__2q7FH\",\"lineWidthContainer\":\"toolbar_lineWidthContainer__2FSMj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__19Eyu\",\"menu\":\"header_menu__nHaMc\",\"active\":\"header_active__1aOXr\",\"current\":\"header_current__1_BOk\",\"logOutBtn\":\"header_logOutBtn__Izf-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"canvas_mainWrapper__Dd1yP\",\"buttonsContainer\":\"canvas_buttonsContainer__1BwMk\",\"button\":\"canvas_button__1jTb3\"};"],"sourceRoot":""}